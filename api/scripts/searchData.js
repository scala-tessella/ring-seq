pages = [{"l":"index.html","n":"ring-seq","t":"ring-seq","d":"","k":"static"},
{"l":"io/github/scala_tessella/ring_seq.html","n":"io.github.scala_tessella.ring_seq","t":"package io.github.scala_tessella.ring_seq","d":"io/github/scala_tessella/ring_seq","k":"package"},
{"l":"io/github/scala_tessella/ring_seq/ComparingOps.html","n":"ComparingOps","t":"trait ComparingOps extends IteratingOps","d":"io/github/scala_tessella/ring_seq/ComparingOps","k":"trait"},
{"l":"io/github/scala_tessella/ring_seq/ComparingOps.html","n":"isReflectionOf","t":"def isReflectionOf(that: CC[A]): Boolean","d":"io/github/scala_tessella/ring_seq/ComparingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/ComparingOps.html","n":"isReversionOf","t":"def isReversionOf(that: CC[A]): Boolean","d":"io/github/scala_tessella/ring_seq/ComparingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/ComparingOps.html","n":"isRotationOf","t":"def isRotationOf(that: CC[A]): Boolean","d":"io/github/scala_tessella/ring_seq/ComparingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/ComparingOps.html","n":"isRotationOrReflectionOf","t":"def isRotationOrReflectionOf(that: CC[A]): Boolean","d":"io/github/scala_tessella/ring_seq/ComparingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IndexingOps.html","n":"IndexingOps","t":"trait IndexingOps","d":"io/github/scala_tessella/ring_seq/IndexingOps","k":"trait"},
{"l":"io/github/scala_tessella/ring_seq/IndexingOps.html","n":"Index","t":"type Index = Int","d":"io/github/scala_tessella/ring_seq/IndexingOps","k":"type"},
{"l":"io/github/scala_tessella/ring_seq/IndexingOps.html","n":"IndexO","t":"type IndexO = Int","d":"io/github/scala_tessella/ring_seq/IndexingOps","k":"type"},
{"l":"io/github/scala_tessella/ring_seq/IndexingOps.html","n":"applyO","t":"def applyO(i: IndexO): A","d":"io/github/scala_tessella/ring_seq/IndexingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IndexingOps.html","n":"indexFrom","t":"def indexFrom(i: IndexO): Index","d":"io/github/scala_tessella/ring_seq/IndexingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IteratingOps.html","n":"IteratingOps","t":"trait IteratingOps extends SlicingOps","d":"io/github/scala_tessella/ring_seq/IteratingOps","k":"trait"},
{"l":"io/github/scala_tessella/ring_seq/IteratingOps.html","n":"reflections","t":"def reflections: Iterator[CC[A]]","d":"io/github/scala_tessella/ring_seq/IteratingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IteratingOps.html","n":"reversions","t":"def reversions: Iterator[CC[A]]","d":"io/github/scala_tessella/ring_seq/IteratingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IteratingOps.html","n":"rotations","t":"def rotations: Iterator[CC[A]]","d":"io/github/scala_tessella/ring_seq/IteratingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IteratingOps.html","n":"rotationsAndReflections","t":"def rotationsAndReflections: Iterator[CC[A]]","d":"io/github/scala_tessella/ring_seq/IteratingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/IteratingOps.html","n":"slidingO","t":"def slidingO(size: Int, step: Int): Iterator[CC[A]]","d":"io/github/scala_tessella/ring_seq/IteratingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/RingSeq$.html","n":"RingSeq","t":"object RingSeq extends ComparingOps with SymmetryOps","d":"io/github/scala_tessella/ring_seq/RingSeq$","k":"object"},
{"l":"io/github/scala_tessella/ring_seq/SlicingOps.html","n":"SlicingOps","t":"trait SlicingOps extends TransformingOps","d":"io/github/scala_tessella/ring_seq/SlicingOps","k":"trait"},
{"l":"io/github/scala_tessella/ring_seq/SlicingOps.html","n":"containsSliceO","t":"def containsSliceO(slice: Seq[A]): Boolean","d":"io/github/scala_tessella/ring_seq/SlicingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SlicingOps.html","n":"indexOfSliceO","t":"def indexOfSliceO(that: Seq[A], from: IndexO): Index","d":"io/github/scala_tessella/ring_seq/SlicingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SlicingOps.html","n":"lastIndexOfSliceO","t":"def lastIndexOfSliceO(that: Seq[A], end: IndexO): Index","d":"io/github/scala_tessella/ring_seq/SlicingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SlicingOps.html","n":"segmentLengthO","t":"def segmentLengthO(p: A => Boolean, from: IndexO): Int","d":"io/github/scala_tessella/ring_seq/SlicingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SlicingOps.html","n":"sliceO","t":"def sliceO(from: IndexO, to: IndexO): CC[A]","d":"io/github/scala_tessella/ring_seq/SlicingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SymmetryOps.html","n":"SymmetryOps","t":"trait SymmetryOps extends TransformingOps","d":"io/github/scala_tessella/ring_seq/SymmetryOps","k":"trait"},
{"l":"io/github/scala_tessella/ring_seq/SymmetryOps.html","n":"rotationalSymmetry","t":"def rotationalSymmetry: Int","d":"io/github/scala_tessella/ring_seq/SymmetryOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SymmetryOps.html","n":"symmetry","t":"def symmetry: Int","d":"io/github/scala_tessella/ring_seq/SymmetryOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/SymmetryOps.html","n":"symmetryIndices","t":"def symmetryIndices: List[Index]","d":"io/github/scala_tessella/ring_seq/SymmetryOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/TransformingOps.html","n":"TransformingOps","t":"trait TransformingOps extends IndexingOps","d":"io/github/scala_tessella/ring_seq/TransformingOps","k":"trait"},
{"l":"io/github/scala_tessella/ring_seq/TransformingOps.html","n":"reflectAt","t":"def reflectAt(i: IndexO): CC[A]","d":"io/github/scala_tessella/ring_seq/TransformingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/TransformingOps.html","n":"rotateLeft","t":"def rotateLeft(step: Int): CC[A]","d":"io/github/scala_tessella/ring_seq/TransformingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/TransformingOps.html","n":"rotateRight","t":"def rotateRight(step: Int): CC[A]","d":"io/github/scala_tessella/ring_seq/TransformingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/TransformingOps.html","n":"startAt","t":"def startAt(i: IndexO): CC[A]","d":"io/github/scala_tessella/ring_seq/TransformingOps","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/examples.html","n":"io.github.scala_tessella.ring_seq.examples","t":"package io.github.scala_tessella.ring_seq.examples","d":"io/github/scala_tessella/ring_seq/examples","k":"package"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"Ring","t":"class Ring[A](underlying: Seq[A], var headIndex: IndexO, var isReflected: Boolean)","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"class"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"current","t":"def current: Seq[A]","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"currentHead","t":"def currentHead: A","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"headIndex","t":"var headIndex: IndexO","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"var"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"isReflected","t":"var isReflected: Boolean","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"var"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"reflect","t":"def reflect(): Unit","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"rotateL","t":"def rotateL(step: Int): Unit","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"def"},
{"l":"io/github/scala_tessella/ring_seq/examples/Ring.html","n":"rotateR","t":"def rotateR(step: Int): Unit","d":"io/github/scala_tessella/ring_seq/examples/Ring","k":"def"},
{"l":"docs/index.html","n":"ring-seq","t":"ring-seq","d":"","k":"static"}];