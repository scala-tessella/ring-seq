Index.PACKAGES = {"io.github.scala_tessella" : [], "io.github.scala_tessella.ring_seq.examples" : [{"name" : "io.github.scala_tessella.ring_seq.examples.Ring", "shortDescription" : "An example class wrapping a sequence and keeping a mutable state of rotation and reflection", "members_class" : [{"label" : "current", "tail" : "(): Seq[A]", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.current", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#current:scala.collection.Seq[A]", "kind" : "def"}, {"label" : "currentHead", "tail" : "(): A", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.currentHead", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#currentHead:A", "kind" : "def"}, {"label" : "reflect", "tail" : "(): Unit", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.reflect", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#reflect():Unit", "kind" : "def"}, {"label" : "rotateL", "tail" : "(step: Int): Unit", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.rotateL", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#rotateL(step:Int):Unit", "kind" : "def"}, {"label" : "rotateR", "tail" : "(step: Int): Unit", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.rotateR", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#rotateR(step:Int):Unit", "kind" : "def"}, {"member" : "io.github.scala_tessella.ring_seq.examples.Ring#<init>", "error" : "unsupported entity"}, {"label" : "isReflected", "tail" : ": Boolean", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.isReflected", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#isReflected:Boolean", "kind" : "var"}, {"label" : "headIndex", "tail" : ": IndexO", "member" : "io.github.scala_tessella.ring_seq.examples.Ring.headIndex", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#headIndex:io.github.scala_tessella.ring_seq.RingSeq.IndexO", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/scala_tessella\/ring_seq\/examples\/Ring.html", "kind" : "class"}], "io.github.scala_tessella.ring_seq" : [{"name" : "io.github.scala_tessella.ring_seq.RingSeq", "shortDescription" : "Adds implicit methods to Seq(immutable \/ mutable and subtypes) for when a sequence needs to be considered circular, its elements forming a ring.", "object" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html", "members_object" : [{"label" : "RingStringBuilderEnrichment", "tail" : "", "member" : "io.github.scala_tessella.ring_seq.RingSeq.RingStringBuilderEnrichment", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#RingStringBuilderEnrichmentextendsAnyValwithRingSeq.RingDecorators[Char,scala.collection.Seq]", "kind" : "implicit final class"}, {"label" : "RingStringEnrichment", "tail" : "", "member" : "io.github.scala_tessella.ring_seq.RingSeq.RingStringEnrichment", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#RingStringEnrichmentextendsAnyValwithRingSeq.RingDecorators[Char,scala.collection.Seq]", "kind" : "implicit final class"}, {"label" : "RingSeqEnrichment", "tail" : "", "member" : "io.github.scala_tessella.ring_seq.RingSeq.RingSeqEnrichment", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#RingSeqEnrichment[A,CC[B]<:scala.collection.SeqOps[B,CC,CC[B]]]extendsAnyValwithRingSeq.RingDecorators[A,CC]", "kind" : "implicit final class"}, {"label" : "RingDecorators", "tail" : "", "member" : "io.github.scala_tessella.ring_seq.RingSeq.RingDecorators", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#RingDecorators[A,CC[B]<:scala.collection.SeqOps[B,CC,CC[B]]]extendsAny", "kind" : "trait"}, {"label" : "IndexO", "tail" : "", "member" : "io.github.scala_tessella.ring_seq.RingSeq.IndexO", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#IndexO=Int", "kind" : "type"}, {"label" : "Index", "tail" : "", "member" : "io.github.scala_tessella.ring_seq.RingSeq.Index", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#Index=Int", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/scala_tessella\/ring_seq\/RingSeq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.github" : [], "io" : []};